{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/bundles/runtime-24ef72a72fa84a20.js","src/jquery-to-js-browser.js","src/utils.js","src/all-methods.js"],"sourcesContent":["module.exports = \"d3846e3f7fb902f7\";","\n\n// eslint-disable-next-line import/no-unresolved\nimport data from \"bundle-text:./methods/vanilla-js-methods.txt\"\n\nconst utils = require('./utils');\n\n\nasync function plugin(source) {\n    const methods = await utils.getJQueryMethodsFromSource(source);\n    const generatedMethods = await utils.generateAlternativeMethods(methods, data);\n\n    // eslint-disable-next-line no-undef\n    const formattedOutput = await prettier.format(\n        generatedMethods.data,\n        {\n            parser: 'babel',\n            tabWidth: 4,\n            // eslint-disable-next-line no-undef\n            plugins: prettierPlugins,\n            singleQuote: true,\n        }\n    );\n\n    return {\n        formattedOutput,\n        methodsFound: methods,\n        remainingMethods: generatedMethods.remainingMethods,\n    };\n}\n\nwindow.ReplaceJquery = plugin;\n","const espree = require('espree');\nconst estraverse = require('estraverse');\nconst alljQueryMethods = require('./all-methods');\n\nfunction traverse(node) {\n    while (node) {\n        switch (node.type) {\n            case 'CallExpression':\n                node = node.callee;\n                break;\n            case 'MemberExpression':\n                if (node.object.type === 'ThisExpression') {\n                    return node.property;\n                }\n                node = node.object;\n                break;\n            case 'Identifier':\n                return node;\n            default:\n                return null;\n        }\n    }\n}\n// Detect jQuery methods\n// @tod Add an option to pass regex for finding jQuery methods\nfunction isjQuery(node) {\n    const id = traverse(node);\n    return (\n        (id && new RegExp('^\\\\$.').test(id && id.name)) ||\n        ['$', 'jQuery'].includes(id && id.name)\n    );\n}\n\nfunction getAST(data) {\n    return espree.parse(data, {\n        ecmaVersion: 2021,\n        sourceType: 'module',\n        comment: true,\n    });\n}\n\nasync function getDependedMethods(\n    methodsFileData,\n    baseMethods,\n    generatedMethods,\n    lineRef,\n    outputStart,\n    outputEnd\n) {\n    const outputAst = getAST(outputStart + baseMethods + outputEnd);\n    const dependedMethods = [];\n    estraverse.traverse(outputAst, {\n        enter(node) {\n            if (node.callee && node.callee.type === 'MemberExpression') {\n                const methodName = node.callee.property.name;\n                if (\n                    (node.callee.object.type === 'ThisExpression' ||\n                        node.callee.object.type === 'Identifier') &&\n                    generatedMethods.indexOf(methodName) < 0\n                ) {\n                    dependedMethods.push(node.callee.property.name);\n                }\n            }\n        },\n    });\n\n    const uniqueDependedMethods = [...new Set(dependedMethods)];\n    let methodsData = '';\n    uniqueDependedMethods.forEach((method) => {\n        if (lineRef[method] && lineRef[method].range) {\n            methodsData += methodsFileData.substring(\n                lineRef[method].range.start,\n                lineRef[method].range.end\n            );\n        }\n    });\n    let allMethods = [...generatedMethods, ...uniqueDependedMethods];\n\n    if (uniqueDependedMethods.length) {\n        const remainingMethodData = await getDependedMethods(\n            methodsFileData,\n            baseMethods + methodsData,\n            allMethods,\n            lineRef,\n            outputStart,\n            outputEnd\n        );\n        methodsData += remainingMethodData.methodsData;\n        allMethods = [...allMethods, remainingMethodData.allMethods];\n    }\n\n    return { methodsData, allMethods };\n}\n\nconst getTemplateData = (data, astMethods) => {\n    const templateLines = {\n        start: 0,\n        end: 0,\n    };\n    astMethods.comments.forEach((comment) => {\n        if (comment.type === 'Block') {\n            if (comment.value.includes('$$ Template START $$')) {\n                templateLines.start = comment.start;\n            } else if (comment.value.includes('$$ Template END $$')) {\n                templateLines.end = comment.end;\n            }\n        }\n    });\n\n    const outputStart = data.substring(0, templateLines.start);\n    const outputEnd = data.substring(templateLines.end, data.length);\n    return {\n        outputStart,\n        outputEnd,\n    };\n};\n\n\nasync function generateAlternativeMethods(methodsToGenerate, methodsFileData) {\n    const lineRef = {};\n    const astMethods = getAST(methodsFileData);\n\n    estraverse.traverse(astMethods, {\n        enter(node) {\n            if (node.type === 'MethodDefinition') {\n                lineRef[node.key.name] = {\n                    name: node.key.name,\n                    range: {\n                        start: node.start,\n                        end: node.end,\n                    },\n                };\n                return estraverse.VisitorOption.Skip;\n            }\n        },\n    });\n    const remainingMethods = [];\n\n    let baseMethods = '';\n    methodsToGenerate.forEach((method) => {\n        if (lineRef[method]) {\n            baseMethods += methodsFileData.substring(\n                lineRef[method].range.start,\n                lineRef[method].range.end\n            );\n        } else {\n            remainingMethods.push(method);\n        }\n    });\n\n    const { outputStart, outputEnd } = getTemplateData(\n        methodsFileData,\n        astMethods\n    );\n\n    const remainingMethodData = await getDependedMethods(\n        methodsFileData,\n        baseMethods,\n        methodsToGenerate,\n        lineRef,\n        outputStart,\n        outputEnd\n    );\n    return {\n        data: outputStart + baseMethods + remainingMethodData.methodsData + outputEnd,\n        remainingMethods,\n    };\n}\n\nasync function getJQueryMethodsFromSource(data) {\n    const ast = getAST(data);\n    const jQFns = [];\n    estraverse.traverse(ast, {\n        enter(node) {\n            if (node.callee && node.callee.type === 'MemberExpression') {\n                if (isjQuery(node)) {\n                    jQFns.push(node.callee.property.name);\n                }\n            }\n        },\n    });\n\n    const jQFnsSet = new Set(jQFns);\n    const alljQMethodsSet = new Set(alljQueryMethods);\n    const intersection = new Set(\n        [...jQFnsSet].filter((method) => alljQMethodsSet.has(method))\n    );\n    return [...intersection];\n}\n\n\nmodule.exports = {\n    traverse,\n    isjQuery,\n    getAST,\n    generateAlternativeMethods,\n    getJQueryMethodsFromSource\n};\n","// This file is autogenerated. Do not modify manually\nmodule.exports = [\n    'add',\n    'addBack',\n    'addClass',\n    'after',\n    'ajax',\n    'ajaxComplete',\n    'ajaxError',\n    'ajaxPrefilter',\n    'ajaxSend',\n    'ajaxSetup',\n    'ajaxStart',\n    'ajaxStop',\n    'ajaxSuccess',\n    'ajaxTransport',\n    'animate',\n    'append',\n    'appendTo',\n    'attr',\n    'attr',\n    'before',\n    'bind',\n    'blur',\n    'camelCase',\n    'change',\n    'children',\n    'cleanData',\n    'clearQueue',\n    'click',\n    'clone',\n    'clone',\n    'closest',\n    'constructor',\n    'contains',\n    'contents',\n    'contextmenu',\n    'css',\n    'css',\n    'data',\n    'data',\n    'dblclick',\n    'delay',\n    'delegate',\n    'dequeue',\n    'dequeue',\n    'detach',\n    'each',\n    'each',\n    'empty',\n    'end',\n    'eq',\n    'error',\n    'escapeSelector',\n    'even',\n    'extend',\n    'extend',\n    'fadeIn',\n    'fadeOut',\n    'fadeTo',\n    'fadeToggle',\n    'filter',\n    'filter',\n    'find',\n    'find',\n    'finish',\n    'first',\n    'focus',\n    'focusin',\n    'focusout',\n    'fx',\n    'get',\n    'get',\n    'getJSON',\n    'getScript',\n    'globalEval',\n    'grep',\n    'has',\n    'hasClass',\n    'hasData',\n    'height',\n    'hide',\n    'holdReady',\n    'hover',\n    'html',\n    'htmlPrefilter',\n    'inArray',\n    'index',\n    'init',\n    'innerHeight',\n    'innerWidth',\n    'insertAfter',\n    'insertBefore',\n    'is',\n    'isArray',\n    'isEmptyObject',\n    'isFunction',\n    'isNumeric',\n    'isPlainObject',\n    'isWindow',\n    'isXMLDoc',\n    'keydown',\n    'keypress',\n    'keyup',\n    'last',\n    'load',\n    'makeArray',\n    'map',\n    'map',\n    'merge',\n    'mousedown',\n    'mouseenter',\n    'mouseleave',\n    'mousemove',\n    'mouseout',\n    'mouseover',\n    'mouseup',\n    'next',\n    'nextAll',\n    'nextUntil',\n    'noConflict',\n    'nodeName',\n    'noop',\n    'not',\n    'now',\n    'odd',\n    'off',\n    'offset',\n    'offsetParent',\n    'on',\n    'one',\n    'outerHeight',\n    'outerWidth',\n    'param',\n    'parent',\n    'parents',\n    'parentsUntil',\n    'parseHTML',\n    'parseJSON',\n    'parseXML',\n    'position',\n    'post',\n    'prepend',\n    'prependTo',\n    'prev',\n    'prevAll',\n    'prevUntil',\n    'promise',\n    'prop',\n    'prop',\n    'proxy',\n    'push',\n    'pushStack',\n    'queue',\n    'queue',\n    'ready',\n    'ready',\n    'readyException',\n    'remove',\n    'removeAttr',\n    'removeAttr',\n    'removeClass',\n    'removeData',\n    'removeData',\n    'removeEvent',\n    'removeProp',\n    'replaceAll',\n    'replaceWith',\n    'resize',\n    'scroll',\n    'scrollLeft',\n    'scrollTop',\n    'select',\n    'serialize',\n    'serializeArray',\n    'show',\n    'siblings',\n    'slice',\n    'slideDown',\n    'slideToggle',\n    'slideUp',\n    'sort',\n    'speed',\n    'splice',\n    'stop',\n    'style',\n    'submit',\n    'text',\n    'text',\n    'toArray',\n    'toggle',\n    'toggleClass',\n    'trigger',\n    'triggerHandler',\n    'trim',\n    'type',\n    'unbind',\n    'undelegate',\n    'unique',\n    'uniqueSort',\n    'unwrap',\n    'val',\n    'when',\n    'width',\n    'wrap',\n    'wrapAll',\n    'wrapInner',\n];\n"],"names":["utils","require","plugin","source","methods","getJQueryMethodsFromSource","generatedMethods","generateAlternativeMethods","data","formattedOutput","prettier","format","parser","tabWidth","plugins","prettierPlugins","singleQuote","methodsFound","remainingMethods","window","ReplaceJquery","espree","estraverse","alljQueryMethods","traverse","node","type","callee","object","property","isjQuery","id","RegExp","test","name","includes","getAST","parse","ecmaVersion","sourceType","comment","getDependedMethods","methodsFileData","baseMethods","lineRef","outputStart","outputEnd","outputAst","dependedMethods","enter","methodName","indexOf","push","uniqueDependedMethods","Set","methodsData","forEach","method","range","substring","start","end","allMethods","length","remainingMethodData","getTemplateData","astMethods","templateLines","comments","value","methodsToGenerate","key","VisitorOption","Skip","ast","jQFns","jQFnsSet","alljQMethodsSet","intersection","filter","has","module","exports"],"version":3,"file":"main.js.map"}